import org.springframework.web.server.ServerWebExchange;
import org.springframework.web.server.WebFilter;
import org.springframework.web.server.WebFilterChain;
import org.springframework.stereotype.Component;
import reactor.core.publisher.Mono;
import org.springframework.http.HttpStatus;

@Component
public class CustomGatewayFilter implements WebFilter {

    @Override
    public Mono<Void> filter(ServerWebExchange exchange, WebFilterChain chain) {
        return exchange.getResponse().setComplete()  // Asegura que la respuesta está completa y no continúa
            .then(
                // Simulamos que hacemos un WebClient y procesamos la respuesta
                someWebClientRequest()
                    .flatMap(responseBody -> {
                        if (responseBody.contains("001")) {
                            // Regresamos Mono.error() para emitir un error y no continuar con el flujo
                            exchange.getResponse().setStatusCode(HttpStatus.BAD_REQUEST); // Opcional: establece un código de estado de error
                            return Mono.error(new RuntimeException("Código de error 001 encontrado"));
                        }
                        return chain.filter(exchange);  // Si no hay error, continúa el siguiente filtro
                    })
            );
    }

    private Mono<String> someWebClientRequest() {
        // Simula un WebClient
        return Mono.just("response with code 001");  // Aquí generas una respuesta con el código "001"
    }
}