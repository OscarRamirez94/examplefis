import org.springframework.cloud.gateway.filter.GatewayFilter;
import org.springframework.cloud.gateway.filter.GatewayFilterChain;
import org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory;
import org.springframework.http.HttpStatus;
import org.springframework.web.server.ServerWebExchange;
import org.springframework.http.server.reactive.ServerHttpResponse;
import org.springframework.core.io.buffer.DataBuffer;
import org.springframework.core.io.buffer.DataBufferFactory;
import reactor.core.publisher.Mono;
import org.springframework.stereotype.Component;

@Component
public class CustomGatewayFilter extends AbstractGatewayFilterFactory<CustomGatewayFilter.Config> {

    public static class Config {
        // Aquí puedes agregar configuraciones personalizadas si es necesario
    }

    public CustomGatewayFilter() {
        super(Config.class);
    }

    @Override
    public GatewayFilter apply(Config config) {
        return (ServerWebExchange exchange, GatewayFilterChain chain) -> {

            // Continuamos con la cadena de filtros y nos aseguramos de intervenir en la respuesta
            return chain.filter(exchange).doOnTerminate(() -> {
                ServerHttpResponse response = exchange.getResponse();

                // Verificar si el código de estado es 200 OK (Puedes adaptarlo si lo necesitas)
                if (response.getStatusCode().equals(HttpStatus.OK)) {
                    // Puedes modificar el encabezado o cualquier otra parte de la respuesta si es necesario
                    response.getHeaders().set("Custom-Header", "Changed");  // Ejemplo de modificación del encabezado
                }

                // Aquí estamos verificando un código de error personalizado (por ejemplo, código '001' en los encabezados)
                String responseCode = exchange.getRequest().getHeaders().getFirst("Response-Code");

                if ("001".equals(responseCode)) {
                    // Modificar el cuerpo de la respuesta para el código 001
                    DataBufferFactory bufferFactory = response.bufferFactory();
                    String newBody = "Este es el nuevo cuerpo para el código 001";
                    DataBuffer buffer = bufferFactory.wrap(newBody.getBytes());

                    // Cambiar el cuerpo de la respuesta
                    response.setStatusCode(HttpStatus.BAD_REQUEST);  // Puedes poner el código de estado que prefieras
                    response.getHeaders().set("Content-Type", "text/plain"); // Cambiar el tipo de contenido si lo deseas

                    // Escribir la respuesta modificada
                    response.writeWith(Mono.just(buffer));

                    // Detener la ejecución de los filtros posteriores y evitar el flujo hacia el cliente
                    // En este caso, devolvemos un error para evitar que se ejecuten filtros adicionales
                    chain.filter(exchange).then(Mono.error(new CustomException("Error: Código 001 recibido")));

                }
            });
        };
    }

    // Excepción personalizada para lanzar en caso de que se encuentre un código 001
    public static class CustomException extends RuntimeException {
        public CustomException(String message) {
            super(message);
        }
    }
}