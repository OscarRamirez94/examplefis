import org.springframework.web.server.ServerWebExchange;
import org.springframework.web.server.WebFilter;
import org.springframework.web.server.WebFilterChain;
import org.springframework.stereotype.Component;
import reactor.core.publisher.Mono;
import org.springframework.http.HttpStatus;

@Component
public class CustomGatewayFilter implements WebFilter {

    @Override
    public Mono<Void> filter(ServerWebExchange exchange, WebFilterChain chain) {
        return someWebClientRequest()
            .flatMap(responseBody -> {
                if (responseBody.contains("001")) {
                    // Establecemos el código de estado de la respuesta HTTP antes de emitir el error
                    exchange.getResponse().setStatusCode(HttpStatus.BAD_REQUEST);  // Establecemos un código de estado 400
                    exchange.getResponse().getHeaders().add("X-Error-Code", "001");  // Agregamos encabezados personalizados

                    // Aquí podríamos agregar un cuerpo de error personalizado
                    String errorMessage = "Código de error 001 encontrado en la respuesta";
                    exchange.getResponse().writeWith(Mono.just(exchange.getResponse()
                        .bufferFactory().wrap(errorMessage.getBytes())));  // Escribimos el mensaje de error en el cuerpo de la respuesta

                    // Finalmente, emitimos el error con Mono.error(), lo que detiene el flujo de procesamiento
                    return Mono.error(new RuntimeException(errorMessage));
                }
                return chain.filter(exchange);  // Si no hay error, continua con el siguiente filtro
            });
    }

    private Mono<String> someWebClientRequest() {
        // Simula una solicitud WebClient
        return Mono.just("response with code 001");  // Respuesta simulada con el código "001"
    }
}