package com.tu.paquete.controller;

import com.tu.paquete.model.BffResponse;
import com.tu.paquete.model.CreditDto;
import com.tu.paquete.model.Dto;
import com.tu.paquete.service.CreditService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.http.MediaType;
import org.springframework.test.web.reactive.server.WebTestClient;
import reactor.core.publisher.Mono;

import java.util.List;

import static org.mockito.ArgumentMatchers.any;

class CreditControllerTest {

    private CreditService service;
    private WebTestClient webTestClient;

    @BeforeEach
    void setUp() {
        service = Mockito.mock(CreditService.class);
        CreditController controller = new CreditController(service);

        webTestClient = WebTestClient.bindToController(controller).build();
    }

    @Test
    void credit_shouldReturnOk() {
        Dto dto = new Dto();
        dto.setNombre("Crédito de Carlos");

        BffResponse<List<Dto>, Void> response = new BffResponse<>();
        response.setData(List.of(dto));

        Mockito.when(service.getCredits(any()))
                .thenReturn(Mono.just(response));

        CreditDto request = new CreditDto();
        request.setCliente("Carlos");

        webTestClient.post()
                .uri("/credits")
                .contentType(MediaType.APPLICATION_JSON)
                .bodyValue(request)
                .exchange()
                .expectStatus().isOk()
                .expectBody()
                .jsonPath("$.data[0].nombre").isEqualTo("Crédito de Carlos");
    }
}